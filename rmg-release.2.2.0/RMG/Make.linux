#************************** SVN Revision Information **************************
#**    $Id: Make.linux 2088 2014-01-31 02:48:45Z ebriggs $    **
#*****************************************************************************/
 
#
#  Make.linux - Compiles code for Linux with MPI
#
#
# CACHE_LINE_SIZE is the size in bytes of a L1 cache line
# L1_CACHE_LINES is the number of lines in the L1 cache
#
#DEFS = -DFD_XSIZE=48 -DFD_YSIZE=48 -DFD_ZSIZE=48
DEFS = -DBATCH_NLS=1


# If using gpuaccelerations set CUDADIR, CUDAINC and CUDALIB for your system
CUDADIR   = /usr/local/cuda-5.0
CUDALIB   = -L$(CUDADIR)/lib64 -lcudart -lcublas -lcuda -lcudadevrt
CUDAINC   = -I$(CUDADIR)/include

EXTRALIBS =
EXTRAINC = -I/opt/openmpi/include -I/usr/local/magma/include

# Local static library locations. Adjust for your system
LOBJECTS = /usr/local/lib/libfftw.a /usr/local/lib64/scalapack/libscalapack.a /usr/local/magma/lib/libmagma.a /usr/local/magma/lib/libmagmablas.a  /usr/local/cuda/lib64/libcublas_device.a

# Modules(directories) that contain the necessary source files
#GLOBAL_MODULES are defined in the top level Makefile
LOCAL_MODULES = Common Input Spin Spin/XC 
MODULES = $(GLOBAL_MODULES) $(LOCAL_MODULES)

CFILES := $(foreach MODULE, $(MODULES), $(wildcard $(MODULE)/*.c))
FFILES := $(foreach MODULE, $(MODULES), $(wildcard $(MODULE)/*.f))
CUFILES := $(foreach MODULE, $(MODULES), $(wildcard $(MODULE)/*.cu))
HFILES := $(wildcard Headers/*.h)
H_EXCLUDES = Headers/arch.h Headers/grid.h Headers/svnrev.h
HFILES := $(filter-out $(H_EXCLUDES),$(HFILES))

SUFFIXES = .cu .c .f
COBJECTS = $(CFILES:.c=.o)
FOBJECTS = $(FFILES:.f=.o)
CUOBJECTS = $(CUFILES:.cu=.cu.o)
OBJECTS = $(COBJECTS) $(FOBJECTS) $(CUOBJECTS) $(LOBJECTS)


#The options below work on Linux with MPICH. This works on Fedora 14. 
#LIBS = -lgfortran -lblas -lm -llapack -lfftw -lmpiblacs -lmpiblacsCinit -lscalapack  -L ../lib/libxc/lib -lxc
#LIBS = -L/usr/lib64/atlas -lsatlas -lgfortran -lm -L ../lib/libxc/lib -lxc -lstdc++ -lhugetlbfs -lfftw3 
LIBS = -lgfortran -lm -L ../lib/libxc/lib -lxc -lstdc++ -lhugetlbfs -L/usr/lib64/atlas/lib -ltatlas -lpthread -L/opt/openmpi/lib64 -lmpi -lgomp $(CUDALIB)
LDFLAGS =


CC = /opt/openmpi/bin/mpicc
CF = /opt/openmpi/bin/mpif77
NVCC = /usr/local/cuda/bin/nvcc
FC = /opt/openmpi/bin/mpif77

# Makefiles: if these change, whole code should be recompiled
MFILES = ../Makefile Make.linux


# Compile flags
ARCH =
#CWARN = -Wall -Wextra -Wmissing-declarations -Wmissing-prototypes -Wundef -Wshadow  -Wredundant-decls -lefence
FFLAGS = $(ARCH) -O3 -fopenmp -march=native -lg2c
#CFLAGS = $(ARCH) -O3 $(EXTRAINC) $(CWARN) -D_REENTRANT $(DEFS) -IHeaders -I../Headers $(CUDAINC) $(CUDALIB) -fopenmp -march=native -ffast-math -mfpmath=sse -mavx -ftree-vectorizer-verbose=2
CFLAGS = $(ARCH) -O3 $(EXTRAINC) $(CWARN) -D_REENTRANT $(DEFS) -IHeaders -I../Headers $(CUDAINC) $(CUDALIB) -fopenmp -march=native -ffast-math -mfpmath=sse -mavx

rmg: Headers/svnrev.h $(COBJECTS) $(FOBJECTS) $(CUOBJECTS) ../lib/libxc/lib/libxc.a
	$(NVCC) -arch=sm_35 $(OBJECTS) $(LIBS) -o $@

%.cu.o : %.cu
	$(NVCC) $(CUDAINC) -gencode=arch=compute_35,code=sm_35 -IHeaders -I../Headers $(DEFS) -DUNIX -O3 -dc -o $@ -c $<

# Runs svnrev to create svnrev.h
Headers/svnrev.h: SvnRev/svnrev $(CFILES) $(FFILES) $(HFILES) $(MFILES)
	SvnRev/svnrev $(CFILES) $(FFILES) $(HFILES) $(MFILES)


# Compiles to get svnrev binary
SvnRev/svnrev: SvnRev/svnrev.c $(MFILES)
	cc $< -o $@
	rm -f svnrev.o


#dependencies
$(OBJECTS): $(HFILES) $(MFILES)


#write_header needs to be recompiled everytime svnrev.h changes
Common/write_header.o: Headers/svnrev.h
